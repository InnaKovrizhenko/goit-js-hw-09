{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAItC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAAR,IAEpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,IAZPR,EAAOiB,iBAAiB,UAgBxB,SAAsBC,GACpBA,EAAMC,iBACNhB,EAAQe,EAAME,cACdhB,EAAOc,EAAME,cACbf,EAASa,EAAME,cAEf,IADA,IAAIC,EAAaC,OAAOnB,EAAMoB,OACrBC,EAAI,EAAGA,GAAKnB,EAAOkB,MAAOC,GAAK,EACtClB,EAAckB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAALV,MACjBlB,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANH,EAAM,M,IAE9DI,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUyB,EAAKN,EAALV,MAClBlB,EAAA8B,OAAOK,QAAQ,sBAAqCH,OAAfvB,EAAS,QAAYuB,OAANE,EAAM,M,IAE9DX,GAAcC,OAAOlB,EAAKmB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nformEl.addEventListener('submit', onSubmitForm);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  delay = event.currentTarget;\n  step = event.currentTarget;\n  amount = event.currentTarget;\n  let timerDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, timerDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    timerDelay += Number(step.value);\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","event","preventDefault","currentTarget","timerDelay","Number","value","i","then","param","delay2","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.e8df0a89.js.map"}